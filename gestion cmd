
on creer ac - 3 pipes (-3 pour le programme path, le nom du fichier d'entree, le nom du fichier de sortie)

en recursif

routine_child(int fdin, int fdout, char **av, char **env)
{
	dup2(fdin, stdin)
	dup2(fdout, stdout)
	excve(av[0], av, env)
	exit(perror(FAILURE), errno)
}

get_path(char **env, char *cmd)
{
	char	**listpath
	char	*dpath
	char	*fpath
	char	**temp;

	while (*env && ft_strncmp(*env), "PATH=", 5)
		env++
	if (!*env)
		return (NULL);
	listpath = ft_split((*env) + 5, ':')
	temp = listpath
	while (listpath && *listpath)
	{
		dpath = ft_strjoin(*listpath, "/")
		fpath = ft_strjoin(path, cmd)
		free(dpath)
		if (!access(fpath))
			break ;
		free(fpath)
		free(*listpath++)
	}
	while (listpath && *listpath)
		free(*listpath++)
	return (free(temp), fpath);
}

char **create_cmd(char *cmd, char **env)
{
	char **argcmd
	char *exe

	argcmd = ft_split(cmd)
	if (!argcmd)
		return (NULL);
	exe = get_path(env, argcmd[0])
	free(argcmd[0])
	argcmd[0] = exe
	return (argcmd)
}



cmd doit etre creer avant le fork (pour pouvoir le free apres)
